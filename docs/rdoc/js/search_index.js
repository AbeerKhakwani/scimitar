var search_data = {"index":{"searchIndex":["scimitar","activerecordbackedresourcescontroller","applicationcontroller","authenticationerror","authenticationscheme","bulk","complextypes","address","base","email","entitlement","ims","name","phonenumber","photo","referencegroup","referencemember","role","x509certificate","engine","engineconfiguration","errorresponse","errors","filter","filtererror","invalidsyntaxerror","lists","count","queryparser","meta","notfounderror","resourceinvaliderror","resourcetype","resourcetypescontroller","resources","base","group","mixin","user","resourcescontroller","schema","address","attribute","base","derivedattributes","email","entitlement","group","ims","name","phonenumber","photo","referencegroup","referencemember","role","user","vdtp","x509certificate","schemascontroller","serviceproviderconfiguration","serviceproviderconfigurationscontroller","supportable","add_custom_resource()","add_errors_from_hash()","all_attributes()","all_matching_filter()","all_valid?()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","basic()","bearer()","cloned_scim_attributes()","complex_scim_attributes()","complex_type_from_hash()","constantize_complex_types()","create()","create()","custom_resources()","default_resources()","derive_attributes_from_schema()","destroy()","destroy()","endpoint()","endpoint()","engine_configuration()","engine_configuration=()","extend_schema()","extended_schemas()","extract_filter_from()","find_attribute()","find_attribute()","find_record()","flatten_extension_attributes()","from_patch_backend!()","from_patch_backend_apply!()","from_patch_backend_traverse!()","from_scim!()","from_scim_backend!()","from_scim_patch!()","handle_record_invalid()","handle_resource_not_found()","handle_scim_error()","handle_unexpected_error()","id()","id()","index()","index()","index()","index()","limit=()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","parse()","replace()","replace()","resource_type()","resource_type_id()","resources()","save!()","schema()","schemas()","schemas()","scim_attributes()","scim_attributes()","scim_attributes()","scim_attributes()","scim_attributes()","scim_attributes()","scim_attributes()","scim_attributes()","scim_mutable_attributes()","scim_pagination_info()","scim_queryable_attributes()","service_provider_configuration()","service_provider_configuration=()","set_schema()","show()","show()","show()","show()","start_index=()","storage_class()","storage_scope()","to_activerecord_query()","to_scim()","to_scim_backend()","tree()","unsupported()","update()","update()","valid?()","valid?()","valid_blank?()","valid_complex_type?()","valid_date_time?()","valid_simple_type?()","validate_resource()","readme"],"longSearchIndex":["scimitar","scimitar::activerecordbackedresourcescontroller","scimitar::applicationcontroller","scimitar::authenticationerror","scimitar::authenticationscheme","scimitar::bulk","scimitar::complextypes","scimitar::complextypes::address","scimitar::complextypes::base","scimitar::complextypes::email","scimitar::complextypes::entitlement","scimitar::complextypes::ims","scimitar::complextypes::name","scimitar::complextypes::phonenumber","scimitar::complextypes::photo","scimitar::complextypes::referencegroup","scimitar::complextypes::referencemember","scimitar::complextypes::role","scimitar::complextypes::x509certificate","scimitar::engine","scimitar::engineconfiguration","scimitar::errorresponse","scimitar::errors","scimitar::filter","scimitar::filtererror","scimitar::invalidsyntaxerror","scimitar::lists","scimitar::lists::count","scimitar::lists::queryparser","scimitar::meta","scimitar::notfounderror","scimitar::resourceinvaliderror","scimitar::resourcetype","scimitar::resourcetypescontroller","scimitar::resources","scimitar::resources::base","scimitar::resources::group","scimitar::resources::mixin","scimitar::resources::user","scimitar::resourcescontroller","scimitar::schema","scimitar::schema::address","scimitar::schema::attribute","scimitar::schema::base","scimitar::schema::derivedattributes","scimitar::schema::email","scimitar::schema::entitlement","scimitar::schema::group","scimitar::schema::ims","scimitar::schema::name","scimitar::schema::phonenumber","scimitar::schema::photo","scimitar::schema::referencegroup","scimitar::schema::referencemember","scimitar::schema::role","scimitar::schema::user","scimitar::schema::vdtp","scimitar::schema::x509certificate","scimitar::schemascontroller","scimitar::serviceproviderconfiguration","scimitar::serviceproviderconfigurationscontroller","scimitar::supportable","scimitar::engine::add_custom_resource()","scimitar::errors#add_errors_from_hash()","scimitar::resources::base::all_attributes()","scimitar::resources::mixin#all_matching_filter()","scimitar::schema::attribute#all_valid?()","scimitar::complextypes::address#as_json()","scimitar::complextypes::base#as_json()","scimitar::errorresponse#as_json()","scimitar::resourcetype#as_json()","scimitar::resources::base#as_json()","scimitar::schema::attribute#as_json()","scimitar::schema::base#as_json()","scimitar::authenticationscheme::basic()","scimitar::authenticationscheme::bearer()","scimitar::schema::base::cloned_scim_attributes()","scimitar::resources::base::complex_scim_attributes()","scimitar::resources::base#complex_type_from_hash()","scimitar::resources::base#constantize_complex_types()","scimitar::activerecordbackedresourcescontroller#create()","scimitar::resourcescontroller#create()","scimitar::engine::custom_resources()","scimitar::engine::default_resources()","scimitar::schema::derivedattributes#derive_attributes_from_schema()","scimitar::activerecordbackedresourcescontroller#destroy()","scimitar::resourcescontroller#destroy()","scimitar::resources::group::endpoint()","scimitar::resources::user::endpoint()","scimitar::engine_configuration()","scimitar::engine_configuration=()","scimitar::resources::base::extend_schema()","scimitar::resources::base::extended_schemas()","scimitar::resources::mixin#extract_filter_from()","scimitar::resources::base::find_attribute()","scimitar::schema::base::find_attribute()","scimitar::activerecordbackedresourcescontroller#find_record()","scimitar::resources::base#flatten_extension_attributes()","scimitar::resources::mixin#from_patch_backend!()","scimitar::resources::mixin#from_patch_backend_apply!()","scimitar::resources::mixin#from_patch_backend_traverse!()","scimitar::resources::mixin#from_scim!()","scimitar::resources::mixin#from_scim_backend!()","scimitar::resources::mixin#from_scim_patch!()","scimitar::applicationcontroller#handle_record_invalid()","scimitar::applicationcontroller#handle_resource_not_found()","scimitar::applicationcontroller#handle_scim_error()","scimitar::applicationcontroller#handle_unexpected_error()","scimitar::schema::group::id()","scimitar::schema::user::id()","scimitar::activerecordbackedresourcescontroller#index()","scimitar::resourcetypescontroller#index()","scimitar::resourcescontroller#index()","scimitar::schemascontroller#index()","scimitar::lists::count#limit=()","scimitar::authenticationerror::new()","scimitar::complextypes::base::new()","scimitar::engineconfiguration::new()","scimitar::filtererror::new()","scimitar::invalidsyntaxerror::new()","scimitar::lists::count::new()","scimitar::lists::queryparser::new()","scimitar::notfounderror::new()","scimitar::resourceinvaliderror::new()","scimitar::resourcetype::new()","scimitar::resources::base::new()","scimitar::schema::attribute::new()","scimitar::schema::base::new()","scimitar::schema::group::new()","scimitar::schema::user::new()","scimitar::serviceproviderconfiguration::new()","scimitar::lists::queryparser#parse()","scimitar::activerecordbackedresourcescontroller#replace()","scimitar::resourcescontroller#replace()","scimitar::resources::base::resource_type()","scimitar::resources::base::resource_type_id()","scimitar::engine::resources()","scimitar::activerecordbackedresourcescontroller#save!()","scimitar::schema::derivedattributes#schema()","scimitar::engine::schemas()","scimitar::resources::base::schemas()","scimitar::schema::address::scim_attributes()","scimitar::schema::group::scim_attributes()","scimitar::schema::name::scim_attributes()","scimitar::schema::referencegroup::scim_attributes()","scimitar::schema::referencemember::scim_attributes()","scimitar::schema::user::scim_attributes()","scimitar::schema::vdtp::scim_attributes()","scimitar::schema::x509certificate::scim_attributes()","scimitar::resources::mixin#scim_mutable_attributes()","scimitar::resourcescontroller#scim_pagination_info()","scimitar::resources::mixin#scim_queryable_attributes()","scimitar::service_provider_configuration()","scimitar::service_provider_configuration=()","scimitar::schema::derivedattributes#set_schema()","scimitar::activerecordbackedresourcescontroller#show()","scimitar::resourcetypescontroller#show()","scimitar::resourcescontroller#show()","scimitar::serviceproviderconfigurationscontroller#show()","scimitar::lists::count#start_index=()","scimitar::resourcescontroller#storage_class()","scimitar::activerecordbackedresourcescontroller#storage_scope()","scimitar::lists::queryparser#to_activerecord_query()","scimitar::resources::mixin#to_scim()","scimitar::resources::mixin#to_scim_backend()","scimitar::lists::queryparser#tree()","scimitar::supportable::unsupported()","scimitar::activerecordbackedresourcescontroller#update()","scimitar::resourcescontroller#update()","scimitar::schema::attribute#valid?()","scimitar::schema::base::valid?()","scimitar::schema::attribute#valid_blank?()","scimitar::schema::attribute#valid_complex_type?()","scimitar::schema::attribute#valid_date_time?()","scimitar::schema::attribute#valid_simple_type?()","scimitar::resources::base#validate_resource()",""],"info":[["Scimitar","","classes/Scimitar.html","",""],["Scimitar::ActiveRecordBackedResourcesController","","classes/Scimitar/ActiveRecordBackedResourcesController.html","","<p>An ActiveRecord-centric subclass of Scimitar::ResourcesController. See that class&#39;s documentation …\n"],["Scimitar::ApplicationController","","classes/Scimitar/ApplicationController.html","",""],["Scimitar::AuthenticationError","","classes/Scimitar/AuthenticationError.html","",""],["Scimitar::AuthenticationScheme","","classes/Scimitar/AuthenticationScheme.html","",""],["Scimitar::Bulk","","classes/Scimitar/Bulk.html","",""],["Scimitar::ComplexTypes","","classes/Scimitar/ComplexTypes.html","",""],["Scimitar::ComplexTypes::Address","","classes/Scimitar/ComplexTypes/Address.html","","<p>Represents the complex Address type.\n<p>@see Scimitar::Schema::Address\n"],["Scimitar::ComplexTypes::Base","","classes/Scimitar/ComplexTypes/Base.html","","<p>This class represents complex types that could be used inside SCIM resources. Each complex type must …\n"],["Scimitar::ComplexTypes::Email","","classes/Scimitar/ComplexTypes/Email.html","","<p>Represents the complex Email type.\n<p>@see Scimitar::Schema::Email\n"],["Scimitar::ComplexTypes::Entitlement","","classes/Scimitar/ComplexTypes/Entitlement.html","","<p>Represents the complex Entitlement type.\n<p>@see Scimitar::Schema::Entitlement\n"],["Scimitar::ComplexTypes::Ims","","classes/Scimitar/ComplexTypes/Ims.html","","<p>Represents the complex Instant Messaging type.\n<p>@see Scimitar::Schema::Ims\n"],["Scimitar::ComplexTypes::Name","","classes/Scimitar/ComplexTypes/Name.html","","<p>Represents the complex Name type.\n<p>@see Scimitar::Schema::Name\n"],["Scimitar::ComplexTypes::PhoneNumber","","classes/Scimitar/ComplexTypes/PhoneNumber.html","","<p>Represents the complex PhoneNumber type.\n<p>@see Scimitar::Schema::PhoneNumber\n"],["Scimitar::ComplexTypes::Photo","","classes/Scimitar/ComplexTypes/Photo.html","","<p>Represents the complex Photo type.\n<p>@see Scimitar::Schema::Photo\n"],["Scimitar::ComplexTypes::ReferenceGroup","","classes/Scimitar/ComplexTypes/ReferenceGroup.html","","<p>Represents the complex reference-a-group type.\n<p>@see Scimitar::Schema::ReferenceGroup\n"],["Scimitar::ComplexTypes::ReferenceMember","","classes/Scimitar/ComplexTypes/ReferenceMember.html","","<p>Represents the complex reference-a-member type.\n<p>@see Scimitar::Schema::ReferenceMember\n"],["Scimitar::ComplexTypes::Role","","classes/Scimitar/ComplexTypes/Role.html","","<p>Represents the complex Role type.\n<p>@see Scimitar::Schema::Role\n"],["Scimitar::ComplexTypes::X509Certificate","","classes/Scimitar/ComplexTypes/X509Certificate.html","","<p>Represents the complex X509Certificate type.\n<p>@see Scimitar::Schema::X509Certificate\n"],["Scimitar::Engine","","classes/Scimitar/Engine.html","",""],["Scimitar::EngineConfiguration","","classes/Scimitar/EngineConfiguration.html","","<p>Scimitar general configuration.\n<p>See config/initializers/scimitar.rb for more information.\n"],["Scimitar::ErrorResponse","","classes/Scimitar/ErrorResponse.html","",""],["Scimitar::Errors","","classes/Scimitar/Errors.html","",""],["Scimitar::Filter","","classes/Scimitar/Filter.html","",""],["Scimitar::FilterError","","classes/Scimitar/FilterError.html","","<p>Raised when an invalid query is attempted, either by being malformed or by being unsupported in some …\n"],["Scimitar::InvalidSyntaxError","","classes/Scimitar/InvalidSyntaxError.html","",""],["Scimitar::Lists","","classes/Scimitar/Lists.html","",""],["Scimitar::Lists::Count","","classes/Scimitar/Lists/Count.html","",""],["Scimitar::Lists::QueryParser","","classes/Scimitar/Lists/QueryParser.html","","<p>Simple SCIM filter support.\n<p>This is currently an extremely limited query parser supporting only a single …\n"],["Scimitar::Meta","","classes/Scimitar/Meta.html","",""],["Scimitar::NotFoundError","","classes/Scimitar/NotFoundError.html","",""],["Scimitar::ResourceInvalidError","","classes/Scimitar/ResourceInvalidError.html","",""],["Scimitar::ResourceType","","classes/Scimitar/ResourceType.html","","<p>Provides info about a resource type. Instances of this class are used to provide info through the /ResourceTypes …\n"],["Scimitar::ResourceTypesController","","classes/Scimitar/ResourceTypesController.html","",""],["Scimitar::Resources","","classes/Scimitar/Resources.html","",""],["Scimitar::Resources::Base","","classes/Scimitar/Resources/Base.html","","<p>The base class for all SCIM resources.\n"],["Scimitar::Resources::Group","","classes/Scimitar/Resources/Group.html","",""],["Scimitar::Resources::Mixin","","classes/Scimitar/Resources/Mixin.html","","<p>The mixin included by any class in your application which is to be mapped to and exposed via a SCIM interface. …\n"],["Scimitar::Resources::User","","classes/Scimitar/Resources/User.html","",""],["Scimitar::ResourcesController","","classes/Scimitar/ResourcesController.html","","<p>A Rails controller which is mostly idiomatic, with #index, #show, #create and #destroy methods mapping …\n"],["Scimitar::Schema","","classes/Scimitar/Schema.html","",""],["Scimitar::Schema::Address","","classes/Scimitar/Schema/Address.html","","<p>Represents the schema for the Address complex type.\n<p>@see Scimitar::ComplexTypes::Address\n"],["Scimitar::Schema::Attribute","","classes/Scimitar/Schema/Attribute.html","","<p>Represents an attribute of a SCIM resource that is declared in its schema. Attributes can be simple or …\n"],["Scimitar::Schema::Base","","classes/Scimitar/Schema/Base.html","","<p>The base class that each schema class must inherit from. These classes represent the schema of a SCIM …\n"],["Scimitar::Schema::DerivedAttributes","","classes/Scimitar/Schema/DerivedAttributes.html","",""],["Scimitar::Schema::Email","","classes/Scimitar/Schema/Email.html","","<p>Represents the schema for the Email complex type.\n<p>@see Scimitar::ComplexTypes::Email\n"],["Scimitar::Schema::Entitlement","","classes/Scimitar/Schema/Entitlement.html","","<p>Represents the schema for the Entitlement complex type.\n<p>@see Scimitar::ComplexTypes::Entitlement\n"],["Scimitar::Schema::Group","","classes/Scimitar/Schema/Group.html","","<p>Represents the schema for the Group resource @see Scimitar::Resources::Group\n"],["Scimitar::Schema::Ims","","classes/Scimitar/Schema/Ims.html","","<p>Represents the schema for the Ims (Instant Messaging) complex type.\n<p>@see Scimitar::ComplexTypes::Ims\n"],["Scimitar::Schema::Name","","classes/Scimitar/Schema/Name.html","","<p>Represents the schema for the Name complex type @see Scimitar::ComplexTypes::Name\n"],["Scimitar::Schema::PhoneNumber","","classes/Scimitar/Schema/PhoneNumber.html","","<p>Represents the schema for the PhoneNumber complex type.\n<p>@see Scimitar::ComplexTypes::PhoneNumber\n"],["Scimitar::Schema::Photo","","classes/Scimitar/Schema/Photo.html","","<p>Represents the schema for the Photo complex type.\n<p>@see Scimitar::ComplexTypes::Photo\n"],["Scimitar::Schema::ReferenceGroup","","classes/Scimitar/Schema/ReferenceGroup.html","","<p>Represents the schema for the ReferenceGroup complex type, referring to a group of which a user is a …\n"],["Scimitar::Schema::ReferenceMember","","classes/Scimitar/Schema/ReferenceMember.html","","<p>Represents the schema for the ReferenceMember complex type, referring to a member of a group (where members …\n"],["Scimitar::Schema::Role","","classes/Scimitar/Schema/Role.html","","<p>Represents the schema for the Role complex type.\n<p>@see Scimitar::ComplexTypes::Role\n"],["Scimitar::Schema::User","","classes/Scimitar/Schema/User.html","","<p>Represents the schema for the User resource @see Scimitar::Resources::User\n"],["Scimitar::Schema::Vdtp","","classes/Scimitar/Schema/Vdtp.html","","<p>Represents a common schema for a few complex types; base class DRYs up code. “Vdtp” - Value …\n"],["Scimitar::Schema::X509Certificate","","classes/Scimitar/Schema/X509Certificate.html","","<p>Represents the schema for the X509Certificate complex type. The &#39;value&#39; holds the certificate …\n"],["Scimitar::SchemasController","","classes/Scimitar/SchemasController.html","",""],["Scimitar::ServiceProviderConfiguration","","classes/Scimitar/ServiceProviderConfiguration.html","","<p>Represents the service provider info. Used by the /ServiceProviderConfig endpoint to provide specification …\n"],["Scimitar::ServiceProviderConfigurationsController","","classes/Scimitar/ServiceProviderConfigurationsController.html","",""],["Scimitar::Supportable","","classes/Scimitar/Supportable.html","",""],["add_custom_resource","Scimitar::Engine","classes/Scimitar/Engine.html#method-c-add_custom_resource","(resource)","<p>Can be used to add a new resource type which is not provided by the gem. For example:\n\n<pre><code>module Scim\n  module ...\n</code></pre>\n"],["add_errors_from_hash","Scimitar::Errors","classes/Scimitar/Errors.html#method-i-add_errors_from_hash","(errors_hash, prefix: nil)",""],["all_attributes","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-all_attributes","()",""],["all_matching_filter","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-all_matching_filter","(filter:, within_array:, &block)","<p>Given a SCIM filter string and array of Hashes from a SCIM object, search for matches within the array …\n"],["all_valid?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-all_valid-3F","(complex_type, value)",""],["as_json","Scimitar::ComplexTypes::Address","classes/Scimitar/ComplexTypes/Address.html#method-i-as_json","(options = {})","<p>Returns the JSON representation of an Address.\n"],["as_json","Scimitar::ComplexTypes::Base","classes/Scimitar/ComplexTypes/Base.html#method-i-as_json","(options={})","<p>Converts the object to its SCIM representation which is always a json representation @param options [Hash] …\n"],["as_json","Scimitar::ErrorResponse","classes/Scimitar/ErrorResponse.html#method-i-as_json","(options = {})",""],["as_json","Scimitar::ResourceType","classes/Scimitar/ResourceType.html#method-i-as_json","(options = {})",""],["as_json","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-i-as_json","(options = {})",""],["as_json","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-as_json","(options = {})",""],["as_json","Scimitar::Schema::Base","classes/Scimitar/Schema/Base.html#method-i-as_json","(options = {})","<p>Converts the schema to its json representation that will be returned by /SCHEMAS end-point of a SCIM …\n"],["basic","Scimitar::AuthenticationScheme","classes/Scimitar/AuthenticationScheme.html#method-c-basic","()",""],["bearer","Scimitar::AuthenticationScheme","classes/Scimitar/AuthenticationScheme.html#method-c-bearer","()",""],["cloned_scim_attributes","Scimitar::Schema::Base","classes/Scimitar/Schema/Base.html#method-c-cloned_scim_attributes","()",""],["complex_scim_attributes","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-complex_scim_attributes","()",""],["complex_type_from_hash","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-i-complex_type_from_hash","(scim_attribute, attr_value)",""],["constantize_complex_types","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-i-constantize_complex_types","(hash)",""],["create","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-create","()","<p>POST (create)\n"],["create","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-create","(&block)","<p>POST (create)\n<p>Call with a block that is passed a SCIM resource instance - e.g a Scimitar::Resources::User …\n"],["custom_resources","Scimitar::Engine","classes/Scimitar/Engine.html#method-c-custom_resources","()","<p>Returns the list of custom resources, if any.\n"],["default_resources","Scimitar::Engine","classes/Scimitar/Engine.html#method-c-default_resources","()","<p>Returns the default resources added in this gem:\n<p>Scimitar::Resources::User\n<p>Scimitar::Resources::Group\n"],["derive_attributes_from_schema","Scimitar::Schema::DerivedAttributes","classes/Scimitar/Schema/DerivedAttributes.html#method-i-derive_attributes_from_schema","(schema)",""],["destroy","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-destroy","()","<p>DELETE (remove)\n"],["destroy","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-destroy","()","<p>DELETE (remove)\n"],["endpoint","Scimitar::Resources::Group","classes/Scimitar/Resources/Group.html#method-c-endpoint","()",""],["endpoint","Scimitar::Resources::User","classes/Scimitar/Resources/User.html#method-c-endpoint","()",""],["engine_configuration","Scimitar","classes/Scimitar.html#method-c-engine_configuration","()",""],["engine_configuration=","Scimitar","classes/Scimitar.html#method-c-engine_configuration-3D","(custom_configuration)",""],["extend_schema","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-extend_schema","(schema)","<p>Can be used to extend an existing resource type&#39;s schema @example\n\n<pre><code>module Scim\n  module Schema\n    ...\n</code></pre>\n"],["extended_schemas","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-extended_schemas","()",""],["extract_filter_from","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-extract_filter_from","(path_component:)","<p>Given a path element from SCIM, splits this into the attribute and filter parts. Returns a tuple of [attribute, …\n"],["find_attribute","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-find_attribute","(*path)","<p>Calls to Scimitar::Schema::Base::find_attribute for each of the schemas in ::schemas, in order returned …\n"],["find_attribute","Scimitar::Schema::Base","classes/Scimitar/Schema/Base.html#method-c-find_attribute","(*path)","<p>Find a given attribute this schema, travelling down a path to any sub-attributes within. Given that callers …\n"],["find_record","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-find_record","(record_id)","<p>Find a RIP user record. Subclasses can override this if they need special lookup behaviour.\n<p><code>record_id</code> … &mdash; "],["flatten_extension_attributes","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-i-flatten_extension_attributes","(options)",""],["from_patch_backend!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_patch_backend-21","(nature:, path:, value:, altering_hash:)","<p>Recursive back-end for #from_scim_patch! which traverses paths down into one or - if multiple-match filters …\n"],["from_patch_backend_apply!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_patch_backend_apply-21","(nature:, path:, value:, altering_hash:)","<p>Called by #from_patch_backend! when dealing with path the last path element; applies the operation nature …\n"],["from_patch_backend_traverse!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_patch_backend_traverse-21","(nature:, path:, value:, altering_hash:)","<p>Called by #from_patch_backend! when dealing with path elements that is not yet the final (leaf) entry. …\n"],["from_scim!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_scim-21","(scim_hash:)","<p>Update self from a SCIM object using ::scim_attributes_map. This does NOT PERSIST (“save”) …\n"],["from_scim_backend!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_scim_backend-21","( attrs_map_or_leaf_value:, scim_hash_or_leaf_value:, path: [] )","<p>Given a SCIM resource representation (left) and an attribute map to an instance of the mixin-including …\n"],["from_scim_patch!","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-from_scim_patch-21","(patch_hash:)","<p>Update self from a SCIM object representing a PATCH operation. This does NOT PERSIST (“save”) …\n"],["handle_record_invalid","Scimitar::ApplicationController","classes/Scimitar/ApplicationController.html#method-i-handle_record_invalid","(error_message)","<p>This is a bespoke handler that&#39;s used to render a SCIM error for an invalid resource (POST, PUT, …\n"],["handle_resource_not_found","Scimitar::ApplicationController","classes/Scimitar/ApplicationController.html#method-i-handle_resource_not_found","(_exception)","<p>You can use:\n\n<pre><code>rescue_from SomeException, with: :handle_resource_not_found\n</code></pre>\n<p>…to “globally” invoke …\n"],["handle_scim_error","Scimitar::ApplicationController","classes/Scimitar/ApplicationController.html#method-i-handle_scim_error","(error_response)","<p>This base controller uses:\n\n<pre><code>rescue_from Scimitar::ErrorResponse, with: :handle_scim_error\n</code></pre>\n<p>…to “globally” …\n"],["handle_unexpected_error","Scimitar::ApplicationController","classes/Scimitar/ApplicationController.html#method-i-handle_unexpected_error","(exception)","<p>This base controller uses:\n\n<pre><code>rescue_from StandardError, with: :handle_unexpected_error\n</code></pre>\n<p>…to “globally” …\n"],["id","Scimitar::Schema::Group","classes/Scimitar/Schema/Group.html#method-c-id","()",""],["id","Scimitar::Schema::User","classes/Scimitar/Schema/User.html#method-c-id","()",""],["index","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-index","()","<p>GET (list)\n"],["index","Scimitar::ResourceTypesController","classes/Scimitar/ResourceTypesController.html#method-i-index","()",""],["index","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-index","(pagination_info, page_of_results, &block)","<p>GET (list)\n<p>Pass a Scimitar::Lists::Count object providing pagination data along with a page of results …\n"],["index","Scimitar::SchemasController","classes/Scimitar/SchemasController.html#method-i-index","()",""],["limit=","Scimitar::Lists::Count","classes/Scimitar/Lists/Count.html#method-i-limit-3D","(value)","<p>Set a limit (page size) value.\n<p><code>value</code> &mdash; Integer value held in a String. Must be &gt;= 1.\n\n<p>Raises exceptions …\n"],["new","Scimitar::AuthenticationError","classes/Scimitar/AuthenticationError.html#method-c-new","()",""],["new","Scimitar::ComplexTypes::Base","classes/Scimitar/ComplexTypes/Base.html#method-c-new","(options={})",""],["new","Scimitar::EngineConfiguration","classes/Scimitar/EngineConfiguration.html#method-c-new","(attributes = {})",""],["new","Scimitar::FilterError","classes/Scimitar/FilterError.html#method-c-new","(message = nil)",""],["new","Scimitar::InvalidSyntaxError","classes/Scimitar/InvalidSyntaxError.html#method-c-new","(error_message)",""],["new","Scimitar::Lists::Count","classes/Scimitar/Lists/Count.html#method-c-new","(*args)",""],["new","Scimitar::Lists::QueryParser","classes/Scimitar/Lists/QueryParser.html#method-c-new","(attribute_map)","<p>Initialise an object.\n<p><code>attribute_map</code> &mdash; See Scimitar::Resources::Mixin and documentation on implementing  …\n\n"],["new","Scimitar::NotFoundError","classes/Scimitar/NotFoundError.html#method-c-new","(id)",""],["new","Scimitar::ResourceInvalidError","classes/Scimitar/ResourceInvalidError.html#method-c-new","(error_message)",""],["new","Scimitar::ResourceType","classes/Scimitar/ResourceType.html#method-c-new","(attributes = {})",""],["new","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-new","(options = {})",""],["new","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-c-new","(options = {})","<p>@param options [Hash] a hash of values to be used for instantiating the attribute object. Some of the …\n"],["new","Scimitar::Schema::Base","classes/Scimitar/Schema/Base.html#method-c-new","(options = {})",""],["new","Scimitar::Schema::Group","classes/Scimitar/Schema/Group.html#method-c-new","(options = {})",""],["new","Scimitar::Schema::User","classes/Scimitar/Schema/User.html#method-c-new","(options = {})",""],["new","Scimitar::ServiceProviderConfiguration","classes/Scimitar/ServiceProviderConfiguration.html#method-c-new","(attributes = {})",""],["parse","Scimitar::Lists::QueryParser","classes/Scimitar/Lists/QueryParser.html#method-i-parse","(input)","<p>Parse SCIM filter query into RPN stack\n<p><code>input</code> &mdash; Input filter string, e.g. &#39;giveName eq “Briony”&#39;. …\n\n"],["replace","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-replace","()","<p>PUT (replace)\n"],["replace","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-replace","(&block)","<p>PUT (replace)\n<p>Similar to #create, but you&#39;re passed an ID to find as well as the resource details …\n"],["resource_type","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-resource_type","(location)",""],["resource_type_id","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-resource_type_id","()",""],["resources","Scimitar::Engine","classes/Scimitar/Engine.html#method-c-resources","()",""],["save!","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-save-21","(record)","<p>Save a record, dealing with validation exceptions by raising SCIM errors.\n<p><code>record</code> &mdash; ActiveRecord subclass …\n\n"],["schema","Scimitar::Schema::DerivedAttributes","classes/Scimitar/Schema/DerivedAttributes.html#method-i-schema","()",""],["schemas","Scimitar::Engine","classes/Scimitar/Engine.html#method-c-schemas","()",""],["schemas","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-c-schemas","()",""],["scim_attributes","Scimitar::Schema::Address","classes/Scimitar/Schema/Address.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::Group","classes/Scimitar/Schema/Group.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::Name","classes/Scimitar/Schema/Name.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::ReferenceGroup","classes/Scimitar/Schema/ReferenceGroup.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::ReferenceMember","classes/Scimitar/Schema/ReferenceMember.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::User","classes/Scimitar/Schema/User.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::Vdtp","classes/Scimitar/Schema/Vdtp.html#method-c-scim_attributes","()",""],["scim_attributes","Scimitar::Schema::X509Certificate","classes/Scimitar/Schema/X509Certificate.html#method-c-scim_attributes","()",""],["scim_mutable_attributes","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-scim_mutable_attributes","()","<p>An instance-level method which calls ::scim_mutable_attributes and either uses its returned array of …\n"],["scim_pagination_info","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-scim_pagination_info","(total_count = nil)","<p>For #index actions, returns a Scimitar::Lists::Count instance which can be used to access offset-vs-start-index …\n"],["scim_queryable_attributes","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-scim_queryable_attributes","()","<p>An instance level method which calls ::scim_queryable_attributes and caches the result in an instance …\n"],["service_provider_configuration","Scimitar","classes/Scimitar.html#method-c-service_provider_configuration","(location:)",""],["service_provider_configuration=","Scimitar","classes/Scimitar.html#method-c-service_provider_configuration-3D","(custom_configuration)",""],["set_schema","Scimitar::Schema::DerivedAttributes","classes/Scimitar/Schema/DerivedAttributes.html#method-i-set_schema","(schema)",""],["show","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-show","()","<p>GET/id (show)\n"],["show","Scimitar::ResourceTypesController","classes/Scimitar/ResourceTypesController.html#method-i-show","()",""],["show","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-show","(&block)","<p>GET/id (show)\n<p>Call with a block that is passed an ID to find in “your” domain. Evaluate to the …\n"],["show","Scimitar::ServiceProviderConfigurationsController","classes/Scimitar/ServiceProviderConfigurationsController.html#method-i-show","()",""],["start_index=","Scimitar::Lists::Count","classes/Scimitar/Lists/Count.html#method-i-start_index-3D","(value)","<p>Set a start index (offset) value. Values start at 1. See also #offset.\n<p><code>value</code> &mdash; Integer value held in a  …\n\n"],["storage_class","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-storage_class","()","<p>The class including Scimitar::Resources::Mixin which declares mappings to the entity you return in #resource_type …\n"],["storage_scope","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-storage_scope","()","<p>Return an ActiveRecord::Relation used as the starting scope for #index lists and any &#39;find by ID&#39; …\n"],["to_activerecord_query","Scimitar::Lists::QueryParser","classes/Scimitar/Lists/QueryParser.html#method-i-to_activerecord_query","(base_scope)","<p>Having called #parse, call here to generate an ActiveRecord query based on a given starting scope. The …\n"],["to_scim","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-to_scim","(location:)","<p>Render self as a SCIM object using ::scim_attributes_map.\n<p><code>location</code> &mdash; The location (HTTP(S) full URI) of …\n\n"],["to_scim_backend","Scimitar::Resources::Mixin","classes/Scimitar/Resources/Mixin.html#method-i-to_scim_backend","(data_source:, attrs_map_or_leaf_value:)","<p>A recursive method that takes a Hash mapping SCIM attributes to the mixing in class&#39;s attributes …\n"],["tree","Scimitar::Lists::QueryParser","classes/Scimitar/Lists/QueryParser.html#method-i-tree","()","<p>Transform the RPN stack into a tree, returning the result. A new tree is created each time, so you can …\n"],["unsupported","Scimitar::Supportable","classes/Scimitar/Supportable.html#method-c-unsupported","()",""],["update","Scimitar::ActiveRecordBackedResourcesController","classes/Scimitar/ActiveRecordBackedResourcesController.html#method-i-update","()","<p>PATCH (update)\n"],["update","Scimitar::ResourcesController","classes/Scimitar/ResourcesController.html#method-i-update","(&block)","<p>PATCH (update)\n<p>A variant of #create where you&#39;re again passed the resource ID (in “your” …\n"],["valid?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-valid-3F","(value)","<p>Validates a value against this attribute object. For simple attributes, it checks if blank is valid or …\n"],["valid?","Scimitar::Schema::Base","classes/Scimitar/Schema/Base.html#method-c-valid-3F","(resource)","<p>Validates the resource against specific validations of each attribute,for example if the type of the …\n"],["valid_blank?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-valid_blank-3F","()",""],["valid_complex_type?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-valid_complex_type-3F","(value)",""],["valid_date_time?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-valid_date_time-3F","(value)",""],["valid_simple_type?","Scimitar::Schema::Attribute","classes/Scimitar/Schema/Attribute.html#method-i-valid_simple_type-3F","(value)",""],["validate_resource","Scimitar::Resources::Base","classes/Scimitar/Resources/Base.html#method-i-validate_resource","()",""],["README","","files/README_md.html","","<p>Scimitar\n<p><img src=\"https://img.shields.io/badge/license-mit-blue.svg\">\n<p>A SCIM v2 API endpoint implementation …\n"]]}}